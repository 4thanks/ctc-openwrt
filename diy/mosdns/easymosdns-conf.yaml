# Powered by Apad.pro
# https://apad.pro/easymosdns
#
log:
    file: "./mosdns.log"
    level: error

data_providers:
  - tag: chinalist
    file: ./rules/china_domain_list.txt
    auto_reload: true
  - tag: gfwlist
    file: ./rules/gfw_domain_list.txt
    auto_reload: true
  - tag: cdncn
    file: ./rules/cdn_domain_list.txt
    auto_reload: true
  - tag: chinaip
    file: ./rules/china_ip_list.txt
    auto_reload: true
  - tag: gfwip
    file: ./rules/gfw_ip_list.txt
    auto_reload: true
  - tag: adlist
    file: ./rules/ad_domain_list.txt
    auto_reload: true
  - tag: ecscn
    file: ./ecs_cn_domain.txt
    auto_reload: true
  - tag: ecstw
    file: ./ecs_tw_domain.txt
    auto_reload: true
  - tag: hosts
    file: ./hosts.txt
    auto_reload: true

plugins:
  # 缓存的插件
  - tag: cache
    type: cache
    args:
      size: 10240
      #redis: "redis://127.0.0.1:6379/0"
      lazy_cache_ttl: 86400
      cache_everything: true

  # Hosts的插件
  - tag: hosts
    type: hosts
    args:
      hosts:
        - "provider:hosts"

  # 调整ECS的插件
  # [auto|global|cn|tw]
  - tag: ecs_auto
    type: ecs
    args:
      auto: true
      mask4: 24
      force_overwrite: false
  - tag: ecs_global
    type: ecs
    args:
      auto: true
      mask4: 22
      force_overwrite: false
  - tag: ecs_cn
    type: ecs
    args:
      auto: false
      ipv4: "1.2.4.0"
      ipv6: "2001:dc7:1000::1"
      mask4: 24
      force_overwrite: true
  - tag: ecs_tw
    type: ecs
    args:
      auto: false
      ipv4: "168.95.1.0"
      ipv6: "2001:b000:168::1"
      mask4: 22
      force_overwrite: true

  # 调整TTL的插件
  - tag: ttl_short
    type: ttl
    args:
      minimal_ttl: 60
      maximum_ttl: 3600
  - tag: ttl_long
    type: ttl
    args:
      minimal_ttl: 300
      maximum_ttl: 3600

  # 匹配PTR类型请求的插件
  - tag: query_is_ptr
    type: query_matcher
    args:
      qtype: [12]

  # 匹配TYPE65类型请求的插件
  - tag: qtype65
    type: query_matcher
    args:
      qtype: [65]
      
  # 屏蔽请求的插件
  - tag: black_hole
    type: blackhole
    args:
      rcode: 0
      ipv4: "127.0.0.1"
      ipv6: "::1"

  # 匹配Akamai的插件
  - tag: response_cname_akamai
    type: response_matcher
    args:
      cname:
        - "akamaiedge.net"
        - "akadns.net"
        - "edgekey.net"

  # 匹配本地域名的插件
  - tag: query_is_local_domain
    type: query_matcher
    args:
      domain:
        - "provider:chinalist"

  # 匹配污染域名的插件
  - tag: query_is_non_local_domain
    type: query_matcher
    args:
      domain:
        - "provider:gfwlist"

  # 匹配CDN域名的插件
  - tag: query_is_cdn_cn_domain
    type: query_matcher
    args:
      domain:
        - "provider:cdncn"

  # 匹配广告域名的插件
  - tag: query_is_ad_domain
    type: query_matcher
    args:
      domain:
        - "provider:adlist"

  # 匹配强制本地解析域名的插件
  - tag: query_is_cn_domain
    type: query_matcher
    args:
      domain:
        - "provider:ecscn"

  # 匹配强制非本地解析域名的插件
  - tag: query_is_tw_domain
    type: query_matcher
    args:
      domain:
        - "provider:ecstw"

  # 匹配本地IP的插件
  - tag: response_has_local_ip
    type: response_matcher
    args:
      ip:
        - "provider:chinaip"

  # 匹配污染IP的插件
  - tag: response_has_gfw_ip
    type: response_matcher
    args:
      ip:
        - "provider:gfwip"

  # 转发至本地服务器的插件
  # [local|alidns|dnspod]
  - tag: forward_local
    type: fast_forward
    args:
      upstream:
        - addr: "tls://120.53.53.53:853"
          enable_pipeline: true
        - addr: "udpme://223.5.5.5"
          trusted: true
  - tag: forward_alidns
    type: fast_forward
    args:
      upstream:
        - addr: "223.5.5.5"
  - tag: forward_dnspod
    type: fast_forward
    args:
      upstream:
        - addr: "tls://120.53.53.53:853"
          enable_pipeline: true

  # 转发至远程服务器的插件
  # [remote|host_socks|googledns|googledns_socks]
  - tag: forward_remote
    type: fast_forward
    args:
      upstream:
        - addr: "tls://8.8.4.4:853"
          enable_pipeline: true
        - addr: "208.67.220.220:443"
  - tag: forward_host_socks
    type: fast_forward
    args:
      upstream:
        - addr: "127.0.0.1:53"
          socks5: "127.0.0.1:1080"
  - tag: forward_googledns
    type: fast_forward
    args:
      upstream:
        - addr: "tls://8.8.4.4:853"
          enable_pipeline: true
        - addr: "udpme://8.8.8.8"
          trusted: true
  - tag: forward_googledns_socks
    type: fast_forward
    args:
      upstream:
        - addr: "tcp://8.8.8.8"
          socks5: "127.0.0.1:1080"
          enable_pipeline: true

  # 转发至本地无污染服务器的插件
  # [easymosdns|tunadns]
  - tag: forward_easymosdns
    type: forward
    args:
      upstream:
        - addr: "https://doh.apad.pro/dns-query"
      bootstrap:
        - "119.29.29.29"
      timeout: 5
  - tag: forward_tunadns
    type: fast_forward
    args:
      upstream:
        - addr: "https://101.6.6.6:8443/dns-query"

  # 主要的运行逻辑插件
  # sequence 插件中调用的插件 tag 必须在 sequence 前定义
  # 否则 sequence 找不到对应插件
  - tag: main_sequence
    type: sequence
    args:
      exec:
        # 域名映射IP
        - hosts

        # 获取ECS
        - ecs_auto

        # 缓存
        - cache

        # 屏蔽TYPE65类型请求
        - if: qtype65
          exec:
          - black_hole
          - _return

        # 强制用本地服务器解析
        - if: "(query_is_cn_domain) || [query_is_ptr]"
          exec:
            - forward_alidns
            - _return

        # 强制用非本地服务器解析
        - if: query_is_tw_domain
          exec:
            - ecs_tw
            - forward_googledns
            - ttl_long
            - _return

        # 屏蔽广告域名
        - if: query_is_ad_domain
          exec:
          - _new_nxdomain_response
          - _return

        # 已知的本地域名或CDN域名用本地服务器解析
        - if: "(query_is_local_domain) || (query_is_cdn_cn_domain) || (response_cname_akamai)"
          exec:
            - forward_alidns
            - _return

        # 已知的污染域名用远程服务器解析
        - if: query_is_non_local_domain
          exec:
            - _prefer_ipv4
            - ecs_cn
            - forward_googledns
            - _return

        # 剩下的未知域名用IP分流，分流原理请参考fallback的工作流程
          # primary 从远程服务器获取应答，丢弃本地IP的结果
        - primary:
            - _prefer_ipv4
            - ecs_global
            - forward_googledns
            - ttl_short
            - if: "(response_has_local_ip) || (response_cname_akamai)"
              exec:
                - _drop_response
          # secondary 从本地服务器获取应答
          secondary:
            - ecs_auto
            - forward_local
            - if: "(! response_has_local_ip) && [_response_valid_answer] || (response_has_gfw_ip)"
              exec:
                - _prefer_ipv4
                - ecs_cn
                - forward_remote
                - ttl_long
          # 如果 primary 超过这个延时还没响应，可以假设 primary 出现了问题
          # 这时会采用 secondary 应答。单位: 毫秒
          fast_fallback: 2500
          always_standby: false

servers:
  - exec: main_sequence
    timeout: 5
    listeners:
      - protocol: udp
        addr: "0.0.0.0:53"
      - protocol: tcp
        addr: "0.0.0.0:53"
      #- protocol: http
      #  addr: "127.0.0.1:9053"
      #  url_path: "/dns-query"
      #  get_user_ip_from_header: "X-Forwarded-For"
      #- protocol: tls             
      #  addr: "0.0.0.0:853"
      #  cert: "/etc/mosdns/yourdomain.cert"  # TLS 所需证书文件。
      #  key: "/etc/mosdns/yourdomain.key"    # TLS 所需密钥文件。
      #  idle_timeout: 10          # 连接复用空连接超时时间。单位: 秒。默认: 10。

#api:
#    http: "127.0.0.1:9080"
